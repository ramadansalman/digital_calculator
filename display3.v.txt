module display3(
    input clear,
    input sign,
    input en_res,
    input error,
    input [3:0] res0,
    input [3:0] res1,
    input [3:0] res2,
    input [3:0] res3,
    output reg [6:0] display0,
    output reg [6:0] display1,
    output reg [6:0] display2,
    output reg [6:0] display3,
    output reg [6:0] sign_disp
);

always @(posedge en_res or posedge clear or posedge error) begin
    if (clear) begin
        display0 <= 7'b0000000;
        display1 <= 7'b0000000;
        display2 <= 7'b0000000;
        display3 <= 7'b0000000;
        sign_disp <= 7'b0000000;
    end 
else if ( error) begin 
        display0 <= 7'b0000101;
        display1 <= 7'b0011101;
        display2 <= 7'b0000101;
        display3 <= 7'b0000101;
        sign_disp <=7'b1001111;
end
else if (!error) begin
        case(res0)
            4'b0000: display0 = 7'b1111110; //0
            4'b0001: display0 = 7'b0110000; //1
            4'b0010: display0 = 7'b1101101; //2
            4'b0011: display0 = 7'b1111001; //3
            4'b0100: display0 = 7'b0110011; //4
            4'b0101: display0 = 7'b1011011; //5
            4'b0110: display0 = 7'b1011111; //6
            4'b0111: display0 = 7'b1110000; //7
            4'b1000: display0 = 7'b1111111; //8
            4'b1001: display0 = 7'b1111011; //9
            default: display0 = 7'b0000000;
        endcase

        case(res1)
            4'b0000: display1 = 7'b1111110; //0
            4'b0001: display1 = 7'b0110000; //1
            4'b0010: display1 = 7'b1101101; //2
            4'b0011: display1 = 7'b1111001; //3
            4'b0100: display1 = 7'b0110011; //4
            4'b0101: display1 = 7'b1011011; //5
            4'b0110: display1 = 7'b1011111; //6
            4'b0111: display1 = 7'b1110000; //7
            4'b1000: display1 = 7'b1111111; //8
            4'b1001: display1 = 7'b1111011; //9
            default: display1 = 7'b0000000;
        endcase

        case(res2)
            4'b0000: display2 = 7'b1111110; //0
            4'b0001: display2 = 7'b0110000; //1
            4'b0010: display2 = 7'b1101101; //2
            4'b0011: display2 = 7'b1111001; //3
            4'b0100: display2 = 7'b0110011; //4
            4'b0101: display2 = 7'b1011011; //5
            4'b0110: display2 = 7'b1011111; //6
            4'b0111: display2 = 7'b1110000; //7
            4'b1000: display2 = 7'b1111111; //8
            4'b1001: display2 = 7'b1111011; //9
            default: display2 = 7'b0000000;
        endcase

        case(res3)
            4'b0000: display3 = 7'b1111110; //0
            4'b0001: display3 = 7'b0110000; //1
            4'b0010: display3 = 7'b1101101; //2
            4'b0011: display3 = 7'b1111001; //3
            4'b0100: display3 = 7'b0110011; //4
            4'b0101: display3 = 7'b1011011; //5
            4'b0110: display3 = 7'b1011111; //6
            4'b0111: display3 = 7'b1110000; //7
            4'b1000: display3 = 7'b1111111; //8
            4'b1001: display3 = 7'b1111011; //9
            default: display3 = 7'b0000000;
        endcase

        if (!error && !sign)
            sign_disp = 7'b0000000;
        else
            sign_disp = 7'b0000001;
    end
end

endmodule